# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true  # Fetch submodules
        fetch-depth: 0  # Fetch full commit history

    - name: Run setup.sh
      id: setup_run
      run: |
        setup.sh
        
    - name: Run build.sh
      # Build your program with the given configuration
      run: |
        build.sh

    - name: Extract Version from CMakeLists.txt
      id: extract_version
      run: |
        DATE=$(date +%d-%b-%Y)
        echo "DATE=$DATE"
        echo "date=$DATE" >> $GITHUB_ENV

    - name: Create GitHub Release (Only Once)
      if: ${{ matrix.os == 'ubuntu-latest' }}  # Only first OS creates the release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.date }}
        name: v${{ env.date }}
        body: ${{ env.MESSAGE }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.date }}
        files: ${{ env.package }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

